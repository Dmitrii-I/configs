# To run:
#
# ansible-playbook configure-e7250.yml --connection=local --inventory 127.0.0.1, --become --ask-become-pass --verbose --extra-vars git_user_name=Dmitrii-I --extra-vars git_user_email=me@someemail.com
#
# This ansible playbook assumes `seagull32gb` is mounted under /media/$USER/seagull32gb

---
- hosts: all

  tasks:

  - name: Add key with which Ubuntu archives on CRAN are signed
    become: yes
    tags:
      - apt
    apt_key:
      keyserver: keyserver.ubuntu.com
      id: E298A3A825C0D65DFD57CBB651716619E084DAB9
      state: present

  - name: Add APT repo for R
    become: yes
    tags:
      - apt
    apt_repository:
      repo: deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/
      state: present

  - name: Update APT packages info
    become: yes
    tags:
      - apt
    apt:
      update_cache: yes

  - name: Upgrade APT packages
    become: yes
    tags:
      - apt
    apt:
      upgrade: yes

  - name: Install a list of packages
    tags:
      - apt
    apt:
      name: "{{ packages }}"
    vars:
      packages:
      - git
      - python3-pip
      - python3-venv
      - python3-tk
      - keepassx
      - vim
      - ubuntu-restricted-extras
      - whois
      - httpie
      - curl
      - gnuplot
      - jq
      - r-base-core
      - libcurl4-openssl-dev
      - libssl-dev
      - libxml2-dev
      - traceroute
      - tree

  - name: Create ~/.local/bin directory (e.g. Terraform needs it)
    become: no
    file:
      path: ~/.local/bin
      state: directory
      mode: 0700

  - name: Create ~/.ssh directory
    tags:
      - ssh
    become: no
    file:
      path: ~/.ssh
      state: directory
      mode: 0700

  - name: Copy private SSH key from /media/{{ lookup('env','USER') }}/seagull32gb/secrets/{{ansible_hostname}}/{{ lookup('env','USER') }}/id_rsa
    become: no
    tags:
      - ssh
    copy:
        src: /media/{{ lookup('env','USER') }}/seagull32gb/secrets/{{ansible_hostname}}/{{ lookup('env','USER') }}/id_rsa
        dest: ~/.ssh/id_rsa
        mode: '0600'

  - name: Copy public SSH key from /media/{{ lookup('env','USER') }}/seagull32gb/secrets/{{ansible_hostname}}/{{ lookup('env','USER') }}/id_rsa.pub
    become: no
    tags:
      - ssh
    copy:
        src: /media/{{ lookup('env','USER') }}/seagull32gb/secrets/{{ansible_hostname}}/{{ lookup('env','USER') }}/id_rsa.pub
        dest: ~/.ssh/id_rsa.pub
        mode: '0600'

  - name: Make vim the default editor
    become: no
    lineinfile:
      create: yes
      path: ~/.selected_editor
      regexp: 'SELECTED'
      line: SELECTED_EDITOR="/usr/bin/vim.basic"

  - name: Remove useless packages from the cache
    apt:
      autoclean: yes

  - name: Remove dependencies that are no longer required
    apt:
      autoremove: yes

  - name: Set global git username
    become: no
    git_config:
      name: user.name
      scope: global
      value: "{{ git_user_name }}"

  - name: Set global git email
    become: no
    git_config:
      name: user.email
      scope: global
      value: "{{ git_user_email }}"

  - name: Set git editor
    become: no
    git_config:
      name: core.editor
      scope: global
      value: vim

  - name: Download bashrc
    become: no
    get_url:
      url: https://raw.githubusercontent.com/Dmitrii-I/configs/master/bashrc
      dest: ~/.bashrc
      mode: 0600
      force: yes

  - name: Download bash_profile
    become: no
    get_url:
      url: https://raw.githubusercontent.com/Dmitrii-I/configs/master/bashrc
      dest: ~/.bash_profile
      mode: 0600
      force: yes

  - name: Download psqlrc
    become: no
    get_url:
      url: https://raw.githubusercontent.com/Dmitrii-I/configs/master/psqlrc
      dest: ~/.psqlrc
      mode: 0600
      force: yes

  - name: Download sqliterc
    become: no
    get_url:
      url: https://raw.githubusercontent.com/Dmitrii-I/configs/master/sqliterc
      dest: ~/.sqliterc
      mode: 0600
      force: yes

  - name: Download vimrc
    become: no
    tags:
      - vim
    get_url:
      url: https://raw.githubusercontent.com/Dmitrii-I/configs/master/vimrc
      dest: ~/.vimrc
      mode: 0600
      force: yes

  - name: Create ~/.vim/autoload directory
    tags:
      - vim
    become: no
    file:
      path: ~/.vim/autoload
      state: directory
      mode: 0755

  - name: Create ~/.vim/bundle directory
    tags:
      - vim
    become: no
    file:
      path: ~/.vim/bundle
      state: directory
      mode: 0755

  - name: Create ~/.vim/undo directory
    tags:
      - vim
    become: no
    file:
      path: ~/.vim/undo
      state: directory
      mode: 0755

  - name: Download pathogen.vim
    tags:
      - vim
    become: no
    get_url:
      url: https://tpo.pe/pathogen.vim
      dest: ~/.vim/autoload/pathogen.vim
      mode: 0644
      force: yes

  - name: Delete dir ~/.vim/bundle/vim-colors-solarized before installing
    tags:
      - vim
    become: no
    file:
      path: ~/.vim/bundle/vim-colors-solarized
      state: absent

  - name: Install vim-colors-solarized (if fails, delete its dir)
    tags:
      - vim
    become: no
    git:
      repo: 'https://github.com/altercation/vim-colors-solarized.git'
      dest: ~/.vim/bundle/vim-colors-solarized
      clone: yes
      force: yes
      update: no

  - name: Delete dir ~/.vim/bundle/vim-terraform before installing
    tags:
      - vim
    become: no
    file:
      path: ~/.vim/bundle/vim-terraform
      state: absent

  - name: Install vim-terraform (if fails, delete its dir)
    tags:
      - vim
    become: no
    git:
      repo: 'https://github.com/hashivim/vim-terraform.git'
      dest: ~/.vim/bundle/vim-terraform
      clone: yes
      force: yes
      update: no

  - name: Delete dir ~/.vim/bundle/vim-airline before installing
    tags:
      - vim
    become: no
    file:
      path: ~/.vim/bundle/vim-airline
      state: absent

  - name: Install vim-airline (if fails, delete its dir)
    tags:
      - vim
    become: no
    git:
      repo: 'https://github.com/vim-airline/vim-airline.git'
      dest: ~/.vim/bundle/vim-airline
      clone: yes
      force: yes
      update: no

  - name: Delete dir ~/.vim/bundle/vim-toml before installing
    tags:
      - vim
    become: no
    file:
      path: ~/.vim/bundle/vim-toml
      state: absent

  - name: Install vim-toml
    tags:
      - vim
    become: no
    git:
      repo: 'https://github.com/cespare/vim-toml.git'
      dest: ~/.vim/bundle/toml
      clone: yes
      force: yes
      update: no

  - name: Create a directory for Gnome shells
    become: no
    file:
      path: ~/.local/share/gnome-shell/extensions
      state: directory
      mode: 0755

  - name: Install `Put Window` GNOME shell extension
    become: no
    git:
      repo: 'https://github.com/negesti/gnome-shell-extensions-negesti.git'
      dest: ~/.local/share/gnome-shell/extensions/putWindow@clemens.lab21.org
      clone: yes
      force: yes
      update: no
      version: v26

  - name : Download and unarchive Terraform 0.12.4
    become: no
    tags:
      - terraform
    unarchive:
      src: https://releases.hashicorp.com/terraform/0.12.4/terraform_0.12.4_linux_amd64.zip
      dest: ~/.local/bin/
      remote_src: yes

  - name: Install RStudio
    become: yes
    tags:
      - R
    apt:
      deb: https://download1.rstudio.org/desktop/bionic/amd64/rstudio-1.2.5033-amd64.deb

  - name: Install R package `renv`
    become: yes
    tags:
      - R_packages
      - renv
    shell: Rscript --vanilla -e 'install.packages("renv", repos=c("https://cloud.r-project.org"))'

  - name: Install fzf binary
    become: yes
    unarchive:
      src: https://github.com/junegunn/fzf-bin/releases/download/0.18.0/fzf-0.18.0-linux_amd64.tgz
      dest: /usr/local/bin
      remote_src: yes

  - name: Install PyCharm from snap
    become: yes
    tags:
      - pycharm
    shell: snap install pycharm-community --classic

  - name: Install bitwarden from snap
    become: yes
    tags:
      - bitwarden
    shell: snap install bitwarden --classic

  - name: Disable natural scrolling. Does not feel natural to me. Don't force Apple-isms on me Ubuntu.
    become: no
    tags:
      - gsettings
    shell: gsettings set org.gnome.desktop.peripherals.touchpad natural-scroll false

  - name: Install Julia from snap
    become: yes
    tags:
      - julia
    shell: snap install julia --classic

  - name: Install `awscli`
    tags:
      - python
    become: no
    pip:
      name: awscli
      executable: pip3

